//=====================================================================================================================
// Решение: LotusPlatform
// Проект: LotusClientTemplate
// Раздел: Информационная система обеспечения градостроительной деятельности
// Автор: MagistrBYTE
//---------------------------------------------------------------------------------------------------------------------
/** \file LotusISUDProject.cs
*		Раздел ИСОГД.
*/
//---------------------------------------------------------------------------------------------------------------------
// Версия: 1.0.0.0
// Последнее изменение от 27.03.2022
//=====================================================================================================================
using System;
using System.IO;
using System.Collections.Generic;
using System.ComponentModel;
using System.Xml;
//---------------------------------------------------------------------------------------------------------------------
using Lotus.Core;
using Lotus.Maths;
//=====================================================================================================================
namespace Lotus
{
	namespace ISUD
	{
		//-------------------------------------------------------------------------------------------------------------
		//! \defgroup MunicipalityISUD
		/*@{*/
		//-------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Раздел ИСОГД
		/// </summary>
		//-------------------------------------------------------------------------------------------------------------
		[TypeConverter(typeof(EnumToStringConverter<TISUDSectionType>))]
		public enum TISUDSectionType
		{
			/// <summary>
			/// Территориальное планирование
			/// </summary>
			[Description("Территориальное планирование")]
			TerritorialPlanning,

			/// <summary>
			/// Градостроительное зонирование
			/// </summary>
			[Description("Градостроительное зонирование")]
			Zoning,

			/// <summary>
			/// Планировка территории
			/// </summary>
			[Description("Планировка территории")]
			PlanningArea
		}

		//-------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Раздел ИСОГД
		/// </summary>
		//-------------------------------------------------------------------------------------------------------------
		[TypeConverter(typeof(CISUDSectionConverter))]
		public class CISUDSection : CNameableID, IComparable<CISUDSection>, IEquatable<CISUDSection>
		{
			#region ======================================= КОНСТАНТНЫЕ ДАННЫЕ ========================================
			public static String[] Codes1A = new String[]
			{
				"Документы территориального планирования Российской Федерации в части, касающейся территории муниципального образования",
				"Документы территориального планирования Российской Федерации в части, касающейся территории муниципального образования",
				"Документы территориального планирования субъекта Российской Федерации в части, касающейся территории муниципального образования",
				"Документы территориального планирования муниципального образования, материалы по их обоснованию",
				"Правила землепользования и застройки, внесение в них изменений",
				"Документация по планировке территорий",
				"Изученность природных и техногенных условий на основании результатов инженерных изысканий",
				"Изъятие и резервирование земельных участков для государственных или муниципальных нужд",
				"Застроенные и подлежащие застройке земельные участки",
				"Застроенные и подлежащие застройке земельные участки",
				"Геодезические и картографические материалы"
			};
			#endregion

			#region ======================================= СТАТИЧЕСКИЕ ДАННЫЕ ========================================
			// Основные параметры
			protected static PropertyChangedEventArgs PropertyArgsSectionType = new PropertyChangedEventArgs(nameof(SectionType));
			protected static PropertyChangedEventArgs PropertyArgsFullName = new PropertyChangedEventArgs(nameof(FullName));
			protected static PropertyChangedEventArgs PropertyArgsIDCode1A = new PropertyChangedEventArgs(nameof(IDCode1A));
			#endregion

			#region ======================================= ДАННЫЕ ====================================================
			// Основные параметры
			internal TISUDSectionType mSectionType;
			internal Int32 mIDCode1A;
			#endregion

			#region ======================================= СВОЙСТВА ==================================================
			//
			// ОСНОВНЫЕ ПАРАМЕТРЫ
			//
			/// <summary>
			/// Раздел ИСОГД
			/// </summary>
			[DisplayName("Раздел ИСОГД")]
			[Category("1) Основные параметры")]
			[Description("Раздел ИСОГД")]
			public TISUDSectionType SectionType
			{
				get { return (mSectionType); }
				set
				{
					if (mSectionType != value)
					{
						mSectionType = value;
						NotifyPropertyChanged(PropertyArgsSectionType);
					}
				}
			}

			[DisplayName("Полное имя")]
			[Category("1) Основные параметры")]
			[Description("Полное имя раздела в соответствии со справочником 1А")]
			public String FullName
			{
				get { return (Codes1A[mIDCode1A]); }
			}

			[DisplayName("Код справочника")]
			[Category("1) Основные параметры")]
			[Description("Код справочника 1А")]
			public Int32 IDCode1A
			{
				get { return (mIDCode1A); }
				set
				{
					if (mIDCode1A != value)
					{
						mIDCode1A = value;
						NotifyPropertyChanged(PropertyArgsIDCode1A);
						RaiseIDCodeChanged();
					}
				}
			}
			#endregion

			#region ======================================= КОНСТРУКТОРЫ ==============================================
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Конструктор по умолчанию инициализирует объект класса предустановленными значениями
			/// </summary>
			//---------------------------------------------------------------------------------------------------------
			public CISUDSection()
			{
				Init();
			}
			#endregion

			#region ======================================= СИСТЕМНЫЕ МЕТОДЫ ==========================================
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			///  Проверяет равен ли текущий объект другому объекту того же типа
			/// </summary>
			/// <param name="other">Раздел ИСОГД</param>
			/// <returns>Статус равенства</returns>
			//---------------------------------------------------------------------------------------------------------
			public Boolean Equals(CISUDSection other)
			{
				return (ID == other.ID);
			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Сравнение разделов ИСОГД по расположению
			/// </summary>
			/// <param name="other">Раздел ИСОГД</param>
			/// <returns>Статус сравнения</returns>
			//---------------------------------------------------------------------------------------------------------
			public Int32 CompareTo(CISUDSection other)
			{
				if (mIDCode1A > other.IDCode1A)
				{
					return (1);
				}
				else
				{
					if (mIDCode1A < other.mIDCode1A)
					{
						return (-1);
					}
					else
					{
						return (0);
					}
				}
			}
			#endregion

			#region ======================================= CЛУЖЕБНЫЕ МЕТОДЫ ==========================================
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Первичная инициализация данных
			/// </summary>
			//---------------------------------------------------------------------------------------------------------
			private void Init()
			{
			}
			#endregion

			#region ======================================= CЛУЖЕБНЫЕ МЕТОДЫ СОБЫТИЙ ==================================
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Изменение кода справочника 1А.
			/// Метод автоматически вызывается после установки соответствующего свойства
			/// </summary>
			//---------------------------------------------------------------------------------------------------------
			protected void RaiseIDCodeChanged()
			{
				switch (mIDCode1A)
				{
					case 0:
						{
							mSectionType = TISUDSectionType.TerritorialPlanning;
							Name = "Территориальное планирование";
						}
						break;
					case 1:
						{
							mSectionType = TISUDSectionType.TerritorialPlanning;
							Name = "Территориальное планирование";
						}
						break;
					case 2:
						{
							mSectionType = TISUDSectionType.TerritorialPlanning;
							Name = "Территориальное планирование";
						}
						break;
					case 3:
						{
							mSectionType = TISUDSectionType.TerritorialPlanning;
							Name = "Территориальное планирование";
						}
						break;
					case 4:
						{
							mSectionType = TISUDSectionType.Zoning;
							Name = "Градостроительное зонирование";
						}
						break;
					case 5:
						{
							mSectionType = TISUDSectionType.PlanningArea;
							Name = "Планировка территории";
						}
						break;
					default:
						break;
				}

				NotifyPropertyChanged(PropertyArgsFullName);
				NotifyPropertyChanged(PropertyArgsSectionType);
			}
			#endregion

			#region ======================================= ОБЩИЕ МЕТОДЫ ==============================================
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Создание нового документа
			/// </summary>
			/// <remarks>
			/// Происходит только создание документа указанного типа.
			/// Сам доумент НЕ добавляется в список документов данного проекта
			/// </remarks>
			/// <param name="type_name">Имя типа документа</param>
			/// <param name="doc_name">Имя документа</param>
			/// <returns>Документ</returns>
			//---------------------------------------------------------------------------------------------------------
			//public override IBaseElement CreateDocument(String type_name, String doc_name)
			//{
			//	// TODO Это основной метод требующий реализации
			//	CISUDDocument doc = new CISUDDocument(doc_name);
			//	return (doc);
			//}
			#endregion

			#region ======================================= МЕТОДЫ СЕРИАЛИЗАЦИИ =======================================
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Запись свойств и данных проекта в формат атрибутов XML
			/// </summary>
			/// <param name="xml_writer">Средство записи данных в формат XML</param>
			//---------------------------------------------------------------------------------------------------------
			//protected override void WriteBaseProjectToAttribute(XmlWriter xml_writer)
			//{
			//	base.WriteBaseProjectToAttribute(xml_writer);
			//	xml_writer.WriteIntegerToAttribute("IDCode1A", mIDCode1A);
			//}

			////---------------------------------------------------------------------------------------------------------
			///// <summary>
			///// Чтение свойств и данных проекта из формата атрибутов XML
			///// </summary>
			///// <param name="xml_reader">Средство чтения данных формата XML</param>
			////---------------------------------------------------------------------------------------------------------
			//protected override void ReadBaseProjectFromAttribute(XmlReader xml_reader)
			//{
			//	base.ReadBaseProjectFromAttribute(xml_reader);
			//	mIDCode1A = xml_reader.ReadIntegerFromAttribute("IDCode1A", mIDCode1A);
			//}

			////---------------------------------------------------------------------------------------------------------
			///// <summary>
			///// Получение корневого имени узла для проекта
			///// </summary>
			///// <returns>Имя узла</returns>
			////---------------------------------------------------------------------------------------------------------
			//protected override String GetNodeNameProject()
			//{
			//	return ("ISUDSection");
			//}
			#endregion
		}

		//-------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Конвертер типа раздела ИСОГД для предоставления свойств
		/// </summary>
		//-------------------------------------------------------------------------------------------------------------
		public class CISUDSectionConverter : TypeConverter
		{
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Получение возможности использовать определенный набор свойств
			/// </summary>
			/// <param name="context">Контекст</param>
			/// <returns>True</returns>
			//---------------------------------------------------------------------------------------------------------
			public override Boolean GetPropertiesSupported(ITypeDescriptorContext context)
			{
				return (true);
			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Получение нужной коллекции свойств
			/// </summary>
			/// <param name="context">Контекст</param>
			/// <param name="value">Объект</param>
			/// <param name="attributes">Атрибуты</param>
			/// <returns>Сформированная коллекция свойств</returns>
			//---------------------------------------------------------------------------------------------------------
			public override PropertyDescriptorCollection GetProperties(ITypeDescriptorContext context, Object value,
				Attribute[] attributes)
			{
				List<PropertyDescriptor> result = new List<PropertyDescriptor>();
				PropertyDescriptorCollection pdc = TypeDescriptor.GetProperties(value, true);

				// 1) Общие данные
				result.Add(pdc["Name"]);
				result.Add(pdc["ID"]);
				result.Add(pdc["Group"]);

				// 2) Основные параметры
				result.Add(pdc["SectionType"]);
				result.Add(pdc["FullName"]);
				result.Add(pdc["IDCodeA"]);

				return (new PropertyDescriptorCollection(result.ToArray(), true));
			}
		}
		//-------------------------------------------------------------------------------------------------------------
		/*@}*/
		//-------------------------------------------------------------------------------------------------------------
	}
}
//=====================================================================================================================
