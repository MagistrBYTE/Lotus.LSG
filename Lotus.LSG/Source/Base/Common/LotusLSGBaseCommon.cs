//=====================================================================================================================
// Проект: Lotus.LSG
// Раздел: Базовый модуль
// Подраздел: Общая подсистема
// Автор: MagistrBYTE aka DanielDem <dementevds@gmail.com>
//---------------------------------------------------------------------------------------------------------------------
/** \file LotusLSGBaseCommon.cs
*		Общие типы и структуры данных общей подсистемы базового модуля.
*/
//---------------------------------------------------------------------------------------------------------------------
// Версия: 1.0.0.0
// Последнее изменение от 27.03.2022
//=====================================================================================================================
using System;
using System.IO;
using System.Collections.Generic;
using System.ComponentModel;
using System.Globalization;
using System.Xml;
using System.Xml.Serialization;
//---------------------------------------------------------------------------------------------------------------------
using Lotus.Core;
//=====================================================================================================================
namespace Lotus
{
	namespace LSG
	{
		//-------------------------------------------------------------------------------------------------------------
		//! \defgroup Municipality Набор модулей инфраструктуры ОМСУ
		//! Набор инфраструктуры ОМСУ реализует цифровизацию управления полномочиями органом местного самоуправления
		//-------------------------------------------------------------------------------------------------------------
		//! \defgroup MunicipalityBase Базовый модуль
		//! Базовый модуль определяет общие данные для общей цифровизации управления
		//! \ingroup Municipality
		//-------------------------------------------------------------------------------------------------------------
		//! \defgroup MunicipalityBaseCommon Общая подсистема
		//! Общие данные и концепции характерные для различных полномочий
		//! \ingroup MunicipalityBase
		/*@{*/
		//-------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Право собственности
		/// </summary>
		//-------------------------------------------------------------------------------------------------------------
		[TypeConverter(typeof(EnumToStringConverter<TOwnershipType>))]
		public enum TOwnershipType
		{
			/// <summary>
			/// Собственность не разграничена
			/// </summary>
			[Description("Не разграничена")]
			None,

			/// <summary>
			/// Частная
			/// </summary>
			[Description("Частная")]
			Private,

			/// <summary>
			/// Общедолевая собственность
			/// </summary>
			[Description("Общедолевая")]
			Commonly,

			/// <summary>
			/// Собственность юридических лиц
			/// </summary>
			[Description("Юридических лиц")]
			LegalEntity,

			/// <summary>
			/// Муниципальная собственность - поселения
			/// </summary>
			[Description("Поселения")]
			Settlement,

			/// <summary>
			/// Муниципальная собственность - района
			/// </summary>
			[Description("Муниципальная")]
			Municipal,

			/// <summary>
			/// Собственность субъекта РФ
			/// </summary>
			[Description("Субъекта РФ")]
			Regional,

			/// <summary>
			/// Федеральная собственность
			/// </summary>
			[Description("Федеральная")]
			Federal
		}

		//-------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Статический класс для корректного отображения цены/стоимости объекта
		/// </summary>
		//-------------------------------------------------------------------------------------------------------------
		public static class XPriceFormat
		{
			public static readonly NumberFormatInfo NumberFormatPrice = new NumberFormatInfo()
			{
				// Разделитель для тысячи
				NumberGroupSeparator = " ",

				// Разделитель целой и дробной части
				NumberDecimalSeparator = ","
			};

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Преобразование в строку
			/// </summary>
			/// <param name="value">Значение</param>
			/// <returns>Строка</returns>
			//---------------------------------------------------------------------------------------------------------
			public static String ToString(Decimal value)
			{
				return(value.ToString("#,0.00", NumberFormatPrice));
			}

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Преобразование в строку
			/// </summary>
			/// <param name="value">Значение</param>
			/// <returns>Строка</returns>
			//---------------------------------------------------------------------------------------------------------
			public static String ToString(Decimal? value)
			{
				if (value.HasValue)
				{
					return (value.Value.ToString("#,0.00", NumberFormatPrice));
				}
				else
				{
					return ("-");
				}
			}
		}
		//-------------------------------------------------------------------------------------------------------------
		/*@}*/
		//-------------------------------------------------------------------------------------------------------------
	}
}
//=====================================================================================================================
